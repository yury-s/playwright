diff --git a/Tools/Scripts/update-webkit-libs-jhbuild b/Tools/Scripts/update-webkit-libs-jhbuild
index bf73fe7b4fb..c8f96054db3 100755
--- a/Tools/Scripts/update-webkit-libs-jhbuild
+++ b/Tools/Scripts/update-webkit-libs-jhbuild
@@ -48,6 +48,7 @@ GetOptions(
 sub getJhbuildIncludedFilePaths
 {
     my $jhbuildFile = shift;
+    die "Can't find file $jhbuildFile" if ! -e $jhbuildFile;
     my $dom = XML::LibXML->load_xml(location => $jhbuildFile);
     my @includes;
 
@@ -95,10 +96,23 @@ sub jhbuildConfigurationCheckFile
     }
 }
 
+sub jhbuildModulesetNameChanged()
+{
+    my $jhBuildModulesetNameFile = join('/', getJhbuildPath(), $platform, 'moduleset.name');
+    my $previousModulesetName;
+    open(my $FH, '<', $jhBuildModulesetNameFile) or return 1;
+    {
+        local $/; # localized slurp mode
+        $previousModulesetName = <$FH>;
+    }
+    close($FH);
+    return $previousModulesetName ne getJhbuildModulesetName();
+}
+
 sub jhbuildConfigurationChanged()
 {
-    my $jhbuildMain = join('/', sourceDir(), 'Tools', $platform, 'jhbuild.modules');
-    my @jhbuildFiles = qw(jhbuildrc jhbuild.modules);
+    my $jhbuildMain = join('/', sourceDir(), 'Tools', $platform, getJhbuildModulesetName());
+    my @jhbuildFiles = ('jhbuildrc', getJhbuildModulesetName());
     push(@jhbuildFiles, getJhbuildIncludedFilePaths($jhbuildMain));
 
     foreach my $file (@jhbuildFiles) {
@@ -106,6 +120,7 @@ sub jhbuildConfigurationChanged()
             return 1;
         }
     }
+    return jhbuildModulesetNameChanged();
 }
 
 sub saveMd5File
@@ -125,8 +140,8 @@ sub saveMd5File
 sub saveJhbuildMd5() {
     # Save md5sum for jhbuild-related files.saveJhbuildMd5();
     my $jhbuildPath = getJhbuildPath();
-    my $jhbuildMain = join('/', sourceDir(), 'Tools', $platform, 'jhbuild.modules');
-    my @jhbuildFiles = qw(jhbuildrc jhbuild.modules);
+    my $jhbuildMain = join('/', sourceDir(), 'Tools', $platform, getJhbuildModulesetName());
+    my @jhbuildFiles = ('jhbuildrc', getJhbuildModulesetName());
     push(@jhbuildFiles, getJhbuildIncludedFilePaths($jhbuildMain));
 
     (-d $jhbuildPath) || mkpath $jhbuildPath;
@@ -135,14 +150,28 @@ sub saveJhbuildMd5() {
     }
 }
 
+sub saveJhbuildModulesetName() {
+    my $jhBuildPlatformDir = join('/', getJhbuildPath(), $platform);
+    (-d $jhBuildPlatformDir) || mkpath $jhBuildPlatformDir;
+    my $jhBuildModulesetNameFile = join('/', $jhBuildPlatformDir, 'moduleset.name');
+    open(FH, '>', $jhBuildModulesetNameFile);
+    print FH getJhbuildModulesetName();
+    close(FH);
+}
+
+sub saveJhbuildConfig() {
+    saveJhbuildMd5();
+    saveJhbuildModulesetName();
+}
+
 sub deleteJhbuildMd5() {
     my $jhbuildPath = getJhbuildPath();
     if (!-d $jhbuildPath) {
         return;
     }
 
-    my $jhbuildMain = join('/', sourceDir(), 'Tools', $platform, 'jhbuild.modules');
-    my @jhbuildFiles = qw(jhbuildrc jhbuild.modules);
+    my $jhbuildMain = join('/', sourceDir(), 'Tools', $platform, getJhbuildModulesetName());
+    my @jhbuildFiles = ('jhbuildrc', getJhbuildModulesetName());
     push(@jhbuildFiles, getJhbuildIncludedFilePaths($jhbuildMain));
 
     foreach my $file (@jhbuildFiles) {
@@ -151,6 +180,16 @@ sub deleteJhbuildMd5() {
     }
 }
 
+sub deleteJhbuildModulesetName() {
+    my $jhBuildModulesetNameFile = join('/', jhbuildPath, $platform, 'moduleset.name');
+    unlink($jhBuildModulesetNameFile) if -e $jhBuildModulesetNameFile;
+}
+
+sub deleteJhbuildConfig() {
+    deleteJhbuildMd5();
+    deleteJhbuildModulesetName();
+}
+
 sub runJhbuild
 {
     my $command = shift;
@@ -193,8 +232,8 @@ if ($wipeOnChange && -e getJhbuildPath()) {
 
 print "Updating " . $prettyPlatform{$platform} . " port dependencies using jhbuild...\n";
 if (runJhbuild("build") == 0) {
-    saveJhbuildMd5();
+    saveJhbuildConfig();
 } else {
-    deleteJhbuildMd5();
+    deleteJhbuildConfig();
     die "Failed to build " . $prettyPlatform{$platform} . " port dependencies with jhbuild\n";
 }
diff --git a/Tools/Scripts/webkitdirs.pm b/Tools/Scripts/webkitdirs.pm
index 616f90e965c..5f0f714008f 100755
--- a/Tools/Scripts/webkitdirs.pm
+++ b/Tools/Scripts/webkitdirs.pm
@@ -2079,6 +2079,16 @@ sub getJhbuildPath()
     return File::Spec->catdir(@jhbuildPath);
 }
 
+
+sub getJhbuildModulesetName()
+{
+    if (defined($ENV{'WEBKIT_JHBUILD_MODULESET'})) {
+        return 'jhbuild-' . $ENV{'WEBKIT_JHBUILD_MODULESET'} . '.modules';
+    }
+    return 'jhbuild.modules';
+}
+
+
 sub getUserFlatpakPath()
 {
     my $productDir = baseProductDir();
diff --git a/Tools/gtk/jhbuild-minimal.modules b/Tools/gtk/jhbuild-minimal.modules
new file mode 100644
index 00000000000..8cda5ebbc9b
--- /dev/null
+++ b/Tools/gtk/jhbuild-minimal.modules
@@ -0,0 +1,72 @@
+<?xml version="1.0"?>
+<!DOCTYPE moduleset SYSTEM "moduleset.dtd">
+<?xml-stylesheet type="text/xsl" href="moduleset.xsl"?>
+<moduleset>
+
+  <metamodule id="webkitgtk-minimal-dependencies">
+    <dependencies>
+      <dep package="wpebackend-fdo"/>
+    </dependencies>
+  </metamodule>
+
+  <!-- Please use http/https to access repositories to be friendly to users stuck behind firewalls. -->
+  <repository type="git" name="github.com"
+      href="https://github.com"/>
+  <repository type="tarball" name="github-tarball"
+      href="https://github.com/"/>
+  <repository type="tarball" name="sourceware.org-mirror"
+      href="http://mirrors.kernel.org/sources.redhat.com/"/>
+  <repository type="tarball" name="ftp.gnome.org"
+      href="http://ftp.gnome.org"/>
+  <repository type="tarball" name="download.gnome.org"
+      href="https://download.gnome.org"/>
+  <repository type="git" name="git.gnome.org"
+      href="https://git.gnome.org/browse/"/>
+  <repository type="tarball" name="cairographics.org"
+      href="http://cairographics.org"/>
+  <repository type="tarball" name="freedesktop.org"
+      href="http://www.freedesktop.org"/>
+  <repository type="tarball" name="xorg"
+      href="http://xorg.freedesktop.org"/>
+  <repository type="tarball" name="xmlsoft.org"
+      href="http://xmlsoft.org"/>
+  <repository type="tarball" name="savannah.gnu.org"
+      href="http://download.savannah.gnu.org/releases/"/>
+  <repository type="git" name="freedesktop-git"
+      href="http://anongit.freedesktop.org/git"/>
+ <repository type="tarball" name="dri.freedesktop.org"
+      href="https://dri.freedesktop.org"/>
+  <repository type="tarball" name="mesa.freedesktop.org"
+      href="https://mesa.freedesktop.org"/>
+  <repository type="tarball" name="wayland.freedesktop.org"
+      href="http://wayland.freedesktop.org"/>
+  <repository type="tarball" name="llvm.org"
+      href="http://llvm.org"/>
+  <repository type="tarball" name="webkitgtk-jhbuild-mirror"
+      href="http://webkitgtk.org/jhbuild_mirror/"/>
+  <repository type="tarball" name="gnupg.org"
+      href="https://www.gnupg.org/ftp/gcrypt/"/>
+  <repository type="tarball" name="wpewebkit"
+      href="https://wpewebkit.org/releases/"/>
+
+
+<!-- This moduleset is used when the environment variable WEBKIT_JHBUILD_MODULESET=minimal is set -->
+<!-- Its intended to allow building WebKit using as much as libraries from your distribution as possible -->
+<!-- In order to ensure its minimal, all the modules should have a pkg-config declaration line -->
+
+  <cmake id="libwpe">
+    <pkg-config>wpe-1.0.pc</pkg-config>
+    <branch repo="wpewebkit" module="libwpe-1.4.0.tar.xz" version="1.4.0"
+            hash="sha256:e2d3494fc33fe946ad917fd6a3abd127462b91bba62ef8b35507e92f8ede4188"/>
+  </cmake>
+
+  <cmake id="wpebackend-fdo">
+    <dependencies>
+      <dep package="libwpe"/>
+    </dependencies>
+    <pkg-config>wpebackend-fdo-1.0.pc</pkg-config>
+    <branch repo="wpewebkit" module="wpebackend-fdo-1.4.1.tar.xz" version="1.4.1"
+            hash="sha256:6249a0b7cbfa662206a8d2fa24e2c574e75c681ad0e93468091f1dc68ddb299d"/>
+  </cmake>
+
+</moduleset>
diff --git a/Tools/jhbuild/jhbuildrc_common.py b/Tools/jhbuild/jhbuildrc_common.py
index bbbdbf36039..aa26cd12f39 100644
--- a/Tools/jhbuild/jhbuildrc_common.py
+++ b/Tools/jhbuild/jhbuildrc_common.py
@@ -43,14 +43,26 @@ def init(jhbuildrc_globals, jhbuild_platform):
 
     jhbuildrc_globals["build_policy"] = 'updated'
 
-    __moduleset_file_uri = 'file://' + os.path.join(__tools_directory, 'jhbuild.modules')
+    __moduleset_file_name = 'jhbuild.modules'
+    if 'WEBKIT_JHBUILD_MODULESET' in os.environ:
+        __moduleset_file_name = 'jhbuild-%s.modules' % os.environ['WEBKIT_JHBUILD_MODULESET']
+    __moduleset_file_path = os.path.join(__tools_directory, __moduleset_file_name)
+    if not os.path.isfile(__moduleset_file_path):
+        raise RuntimeError("Can't find the moduleset in path %s" %__moduleset_file_path)
+    __moduleset_file_uri = 'file://' + __moduleset_file_path
+
     __extra_modulesets = os.environ.get("WEBKIT_EXTRA_MODULESETS", "").split(",")
     jhbuildrc_globals["moduleset"] = [__moduleset_file_uri, ]
     if __extra_modulesets != ['']:
         jhbuildrc_globals["moduleset"].extend(__extra_modulesets)
 
     __extra_modules = os.environ.get("WEBKIT_EXTRA_MODULES", "").split(",")
-    jhbuildrc_globals["modules"] = ['webkit' + jhbuild_platform + '-testing-dependencies', ]
+
+    base_dependency_suffix = 'testing'
+    if 'WEBKIT_JHBUILD_MODULESET' in os.environ:
+        base_dependency_suffix = os.environ['WEBKIT_JHBUILD_MODULESET']
+
+    jhbuildrc_globals["modules"] = ['webkit' + jhbuild_platform + '-' + base_dependency_suffix + '-dependencies', ]
     if __extra_modules != ['']:
         jhbuildrc_globals["modules"].extend(__extra_modules)
 
diff --git a/Tools/wpe/jhbuild-minimal.modules b/Tools/wpe/jhbuild-minimal.modules
new file mode 100644
index 00000000000..1e145abaa01
--- /dev/null
+++ b/Tools/wpe/jhbuild-minimal.modules
@@ -0,0 +1,72 @@
+<?xml version="1.0"?>
+<!DOCTYPE moduleset SYSTEM "moduleset.dtd">
+<?xml-stylesheet type="text/xsl" href="moduleset.xsl"?>
+<moduleset>
+
+  <metamodule id="webkitwpe-minimal-dependencies">
+    <dependencies>
+      <dep package="wpebackend-fdo"/>
+    </dependencies>
+  </metamodule>
+
+  <!-- Please use http/https to access repositories to be friendly to users stuck behind firewalls. -->
+  <repository type="git" name="github.com"
+      href="https://github.com"/>
+  <repository type="tarball" name="github-tarball"
+      href="https://github.com/"/>
+  <repository type="tarball" name="sourceware.org-mirror"
+      href="http://mirrors.kernel.org/sources.redhat.com/"/>
+  <repository type="tarball" name="ftp.gnome.org"
+      href="http://ftp.gnome.org"/>
+  <repository type="tarball" name="download.gnome.org"
+      href="https://download.gnome.org"/>
+  <repository type="git" name="git.gnome.org"
+      href="https://git.gnome.org/browse/"/>
+  <repository type="tarball" name="cairographics.org"
+      href="http://cairographics.org"/>
+  <repository type="tarball" name="freedesktop.org"
+      href="http://www.freedesktop.org"/>
+  <repository type="tarball" name="xorg"
+      href="http://xorg.freedesktop.org"/>
+  <repository type="tarball" name="xmlsoft.org"
+      href="http://xmlsoft.org"/>
+  <repository type="tarball" name="savannah.gnu.org"
+      href="http://download.savannah.gnu.org/releases/"/>
+  <repository type="git" name="freedesktop-git"
+      href="http://anongit.freedesktop.org/git"/>
+ <repository type="tarball" name="dri.freedesktop.org"
+      href="https://dri.freedesktop.org"/>
+  <repository type="tarball" name="mesa.freedesktop.org"
+      href="https://mesa.freedesktop.org"/>
+  <repository type="tarball" name="wayland.freedesktop.org"
+      href="http://wayland.freedesktop.org"/>
+  <repository type="tarball" name="llvm.org"
+      href="http://llvm.org"/>
+  <repository type="tarball" name="webkitgtk-jhbuild-mirror"
+      href="http://webkitgtk.org/jhbuild_mirror/"/>
+  <repository type="tarball" name="gnupg.org"
+      href="https://www.gnupg.org/ftp/gcrypt/"/>
+  <repository type="tarball" name="wpewebkit"
+      href="https://wpewebkit.org/releases/"/>
+
+
+<!-- This moduleset is used when the environment variable WEBKIT_JHBUILD_MODULESET=minimal is set -->
+<!-- Its intended to allow building WebKit using as much as libraries from your distribution as possible -->
+<!-- In order to ensure its minimal, all the modules should have a pkg-config declaration line -->
+
+  <cmake id="libwpe">
+    <pkg-config>wpe-1.0.pc</pkg-config>
+    <branch repo="wpewebkit" module="libwpe-1.4.0.tar.xz" version="1.4.0"
+            hash="sha256:e2d3494fc33fe946ad917fd6a3abd127462b91bba62ef8b35507e92f8ede4188"/>
+  </cmake>
+
+  <cmake id="wpebackend-fdo">
+    <dependencies>
+      <dep package="libwpe"/>
+    </dependencies>
+    <pkg-config>wpebackend-fdo-1.0.pc</pkg-config>
+    <branch repo="wpewebkit" module="wpebackend-fdo-1.4.1.tar.xz" version="1.4.1"
+            hash="sha256:6249a0b7cbfa662206a8d2fa24e2c574e75c681ad0e93468091f1dc68ddb299d"/>
+  </cmake>
+
+</moduleset>
